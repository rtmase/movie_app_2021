{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAiCeA,MA7Bf,YAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OAAO,sBAAKC,UAAU,QAAf,UACH,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,eAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,eAA1B,SAA0CI,GAAjCC,QAGjB,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAG,KAA/C,gBCuCGC,G,kNA/CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAMVC,U,sBAAY,8BAAAC,EAAA,sEACmCC,IAAMC,IAAI,4DAD7C,gBACcJ,EADd,EACFK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,OAAQA,EAAQD,WAAW,IAC3CQ,QAAQC,IAAIR,GAHF,2C,uDAKZ,WAEES,KAAKR,c,oBAEP,WAAU,IAAD,EACuBQ,KAAKX,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAEnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACI,qBAAKT,UAAU,SAAf,SACD,sBAAMA,UAAU,cAAhB,0BAGA,qBAAKA,UAAU,SAAf,SACIU,EAAOP,KAAI,SAAAiB,GAAK,OAClB,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,QANTqB,EAAM1B,e,GA/BT4B,IAAMC,YCexBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.37142faf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster, genres}){\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title}/>\r\n        <div className=\"movie_date\">\r\n            <h3 className=\"movie_title\">{title}</h3>\r\n            <h5 className=\"movie_year\">{year}</h5>\r\n            <ul className=\"movie_genres\">\r\n                {genres.map((genre, index) => (\r\n                    <li key={index} className=\"genres_genre\">{genre}</li>\r\n                ))}\r\n            </ul>\r\n            <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n/**\r\n * 주의!!\r\n * {component명}.propTypes   PropTypes x\r\n */\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n// fatch 더 좋은 방법 => Axios\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  /**\n   * axios.get(url)에서 데이터를 가져오기를 기다려라\n   */\n  getMovies = async () => {\n    const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies: movies, isLoading: false });\n    console.log(movies);\n  }\n  componentDidMount() {\n\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n\n    return (\n      <section className=\"container\">\n        {isLoading\n          ? (<div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n          ) : (\n            <div className=\"movies\">\n               {movies.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n            </div>\n          )}\n      </section>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/**\n * react 동작 방식..\n *  react는 소스코드에 처음부터 HTML을 넣지 않고, HTML에서 HTML을 추가하거나 제거함...\n *  application이 로드할 때, 빈 HTML을 가지고 오고, react가 내가 작성해놓은 컴포넌트을 HTML에 넣어줌\n *  react application이 하나의 component만을 rendering 해야함\n * \n * component \n *  HTML을 반환하는 함수\n *  컴포넌트 사용 방법 ex) <App />\n * \n * JSX\n *  javascript와 HTML 사이의 조합..?\n *  javascript안의 HTML\n * \n */\n\n// App.js 컴포넌트를 'root'란 아이디 내부에 삽입\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}